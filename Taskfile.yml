version: "3"

includes:
  deps: "taskfiles/deps.yaml"
  lint: "lint-tasks.yml"
  utils: "tools/yscope-dev-utils/exports/taskfiles/utils/utils.yaml"

vars:
  G_BUILD_DIR: "{{.ROOT_DIR}}/build"
  G_CLP_FFI_JS_BUILD_DIR: "{{.G_BUILD_DIR}}/clp-ffi-js"
  G_DEPS_DIR: "{{.G_BUILD_DIR}}/deps"
  G_DIST_DIR: "{{.ROOT_DIR}}/dist"
  G_EMSDK_DIR: "{{.G_BUILD_DIR}}/emsdk"

  G_CLP_FFI_JS_ENV_NAMES: ["node", "worker"]
  G_CLP_FFI_JS_TARGET_PREFIX: "ClpFfiJs-"

  # These should be kept in-sync with their usage in CMakeLists.txt
  G_DEPS_CMAKE_SETTINGS_DIR: "{{.G_DEPS_DIR}}/cmake-settings"
  G_DEPS_CMAKE_SETTINGS_FILE: "{{.G_DEPS_CMAKE_SETTINGS_DIR}}/settings.cmake"

  G_CLP_FFI_JS_CHECKSUM: "{{.G_BUILD_DIR}}/clp-ffi-js.md5"
  G_EMSDK_CHECKSUM: "{{.G_BUILD_DIR}}/emsdk.md5"

tasks:
  default:
    deps: ["clp-ffi-js"]

  clean:
    cmds:
      - task: "clean-emsdk"
      - task: "clean-clp-ffi-js"
      - "rm -rf '{{.G_BUILD_DIR}}'"

  clean-emsdk:
    cmds:
      - "rm -rf '{{.G_EMSDK_DIR}}'"

  clean-clp-ffi-js:
    cmds:
      - "rm -rf '{{.G_CLP_FFI_JS_BUILD_DIR}}'"

  clp-ffi-js:
    vars:
      CHECKSUM_FILE: "{{.G_CLP_FFI_JS_CHECKSUM}}"
      OUTPUT_DIR: "{{.G_CLP_FFI_JS_BUILD_DIR}}"
    sources:
      - "{{.G_CLP_FFI_JS_BUILD_DIR}}/CMakeCache.txt"
      - "{{.G_EMSDK_CHECKSUM}}"
      - "{{.TASKFILE}}"
      - "CMakeLists.txt"
      - "src/**/*"
    generates: ["{{.CHECKSUM_FILE}}"]
    deps:
      - "emsdk"
      - task: "utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: "config-cmake-project"
      - >-
        cmake
        --build '{{.OUTPUT_DIR}}'
        --parallel
        --target {{range .G_CLP_FFI_JS_ENV_NAMES}}"{{$.G_CLP_FFI_JS_TARGET_PREFIX}}{{.}}" {{end}}
      # This command must be last
      - task: "utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]

  emsdk:
    vars:
      CHECKSUM_FILE: "{{.G_EMSDK_CHECKSUM}}"
      EMSDK_VERSION: "4.0.10"
      OUTPUT_DIR: "{{.G_EMSDK_DIR}}"
    sources: ["{{.TASKFILE}}"]
    generates: ["{{.CHECKSUM_FILE}}"]
    run: "once"
    deps:
      - "init"
      - task: "utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          EXCLUDE_PATTERNS: &emsdk_checksum_exclude_paths
            - "upstream/emscripten/__pycache__"
            - "upstream/emscripten/cache/sanity.txt"
            - "upstream/emscripten/cache/symbol_lists"
            - "upstream/emscripten/cache/symbol_lists.lock"
            - "upstream/emscripten/cache/sysroot/lib/wasm32-emscripten/lto"
            - "upstream/emscripten/third_party/leb128/__pycache__"
            - "upstream/emscripten/tools/__pycache__"
            - "upstream/emscripten/tools/ports/__pycache__"
            - "upstream/emscripten/tools/ports/contrib/__pycache__"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: "clean-emsdk"
      - "git clone https://github.com/emscripten-core/emsdk.git '{{.G_EMSDK_DIR}}'"
      - |-
        cd "{{.G_EMSDK_DIR}}"
        ./emsdk install {{.EMSDK_VERSION}}
        ./emsdk activate {{.EMSDK_VERSION}}
      - |-
        cd "{{.G_EMSDK_DIR}}/upstream/emscripten"
        PATH=$(echo {{.G_EMSDK_DIR}}/node/*/bin):$PATH npm install
      # This command must be last
      - task: "utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          EXCLUDE_PATTERNS: *emsdk_checksum_exclude_paths
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]

  package:
    vars:
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "{{.G_DIST_DIR}}"
    sources:
      - "{{.G_CLP_FFI_JS_CHECKSUM}}"
      - "{{.TASKFILE}}"
    generates: ["{{.CHECKSUM_FILE}}"]
    deps:
      - "clp-ffi-js"
      - task: "utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - "rm -rf {{.OUTPUT_DIR}}"
      - for:
          var: "G_CLP_FFI_JS_ENV_NAMES"
        cmd: >-
          rsync -a
          "{{.G_CLP_FFI_JS_BUILD_DIR}}/{{.G_CLP_FFI_JS_TARGET_PREFIX}}{{.ITEM}}."{d.ts,js,wasm}
          "{{.OUTPUT_DIR}}/"
      - "npm pack"
      # This command must be last
      - task: "utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]

  config-cmake-project:
    internal: true
    sources:
      - "{{.G_EMSDK_CHECKSUM}}"
      - "{{.TASKFILE}}"
      - "CMakeLists.txt"
    generates:
      - "{{.G_CLP_FFI_JS_BUILD_DIR}}/CMakeCache.txt"
      - "{{.G_CLP_FFI_JS_BUILD_DIR}}/compile_commands.json"
    deps:
      - "deps"
      - "emsdk"
    cmd: |-
      cmake \
      -DCLP_FFI_JS_SUPPORTED_ENVIRONMENTS="{{.G_CLP_FFI_JS_ENV_NAMES | join ";"}}" \
      -DCMAKE_TOOLCHAIN_FILE="{{.G_EMSDK_DIR}}/upstream/emscripten/cmake/Modules/Platform/\
      Emscripten.cmake" \
      -S "{{.ROOT_DIR}}" \
      -B "{{.G_CLP_FFI_JS_BUILD_DIR}}"

  init:
    internal: true
    silent: true
    run: "once"
    cmds: ["mkdir -p '{{.G_BUILD_DIR}}'"]
