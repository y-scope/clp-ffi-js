version: "3"

vars:
  G_LINT_CLANG_TIDY_DIR: "{{.G_BUILD_DIR}}/lint-clang-tidy"
  G_LINT_VENV_DIR: "{{.G_BUILD_DIR}}/lint-venv"
  G_SRC_DIR: "{{.ROOT_DIR}}/src"
  G_SRC_CLP_FFI_JS_DIR: "{{.G_SRC_DIR}}/clp_ffi_js"

tasks:
  check:
    cmds:
      - task: "check-cpp-full"
      - task: "check-yaml"

  check-cpp-diff:
    cmds:
      - task: "check-cpp-format"
      - task: "check-cpp-static-diff"

  check-cpp-full:
    cmds:
      - task: "check-cpp-format"
      - task: "check-cpp-static-full"

  check-no-cpp:
    cmds:
      - task: "check-yaml"

  fix:
    cmds:
      - task: "fix-cpp-full"
      - task: "fix-yaml"

  fix-cpp-diff:
    cmds:
      - task: "fix-cpp-format"
      - task: "fix-cpp-static-diff"

  fix-cpp-full:
    cmds:
      - task: "fix-cpp-format"
      - task: "fix-cpp-static-full"

  fix-no-cpp:
    cmds:
      - task: "fix-yaml"

  check-cpp-format:
    sources: &cpp_format_source_files
      - "{{.G_SRC_CLP_FFI_JS_DIR}}/.clang-format"
      - "{{.G_SRC_CLP_FFI_JS_DIR}}/**/*"
      - "{{.TASKFILE}}"
      - "tools/yscope-dev-utils/exports/lint-configs/.clang-format"
    deps: ["cpp-lint-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-format"
        vars:
          FLAGS: ["--dry-run"]
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp", "*.inc"]
          ROOT_PATHS: ["{{.G_SRC_CLP_FFI_JS_DIR}}"]
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  fix-cpp-format:
    sources: *cpp_format_source_files
    deps: ["cpp-lint-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-format"
        vars:
          FLAGS: ["-i"]
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp", "*.inc"]
          ROOT_PATHS: ["{{.G_SRC_CLP_FFI_JS_DIR}}"]
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  check-cpp-static-diff:
    # NOTE: We alias the fix task until we determine which clang-tidy fixes can be applied safely.
    aliases: ["fix-cpp-static-diff"]
    deps:
      - ":config-cmake-project"
      - "cpp-lint-configs"
      - "venv"
    cmds:
      - task: ":utils:cpp-lint:clang-tidy-diff"
        vars:
          FLAGS: &clang_tidy_flags
            - "--config-file '{{.ROOT_DIR}}/.clang-tidy'"
            - "-p '{{.G_CLP_FFI_JS_BUILD_DIR}}/compile_commands.json'"
            - >-
              $(cat "{{.G_CLP_FFI_JS_BUILD_DIR}}/compiler-extra-args.txt" \
                | tr ' ' '\n' \
                | sed 's/^/--extra-arg /' \
                | tr '\n' ' ')
          OUTPUT_DIR: "{{.G_LINT_CLANG_TIDY_DIR}}"
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  check-cpp-static-full:
    # NOTE: We alias the fix task until we determine which clang-tidy fixes can be applied safely.
    aliases: ["fix-cpp-static-full"]
    deps:
      - ":config-cmake-project"
      - "cpp-lint-configs"
      - "venv"
    cmds:
      - task: ":utils:cpp-lint:clang-tidy-find"
        vars:
          FLAGS: *clang_tidy_flags
          OUTPUT_DIR: "{{.G_LINT_CLANG_TIDY_DIR}}"
          ROOT_PATHS: ["{{.G_SRC_CLP_FFI_JS_DIR}}"]
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  yaml:
    aliases:
      - "check-yaml"
      - "fix-yaml"
    deps: ["venv"]
    cmds:
      - |-
        . "{{.G_LINT_VENV_DIR}}/bin/activate"
        yamllint \
          --config-file "{{.ROOT_DIR}}/tools/yscope-dev-utils/exports/lint-configs/.yamllint.yml" \
          --strict \
          .github \
          lint-tasks.yml \
          Taskfile.yml

  cpp-lint-configs:
    internal: true
    run: "once"
    cmd: "{{.ROOT_DIR}}/tools/yscope-dev-utils/exports/lint-configs/symlink-cpp-lint-configs.sh"

  venv:
    internal: true
    vars:
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK | replace \":\" \"#\"}}.md5"
      OUTPUT_DIR: "{{.G_LINT_VENV_DIR}}"
    sources:
      - "{{.ROOT_DIR}}/Taskfile.yml"
      - "{{.TASKFILE}}"
      - "lint-requirements.txt"
    generates: ["{{.CHECKSUM_FILE}}"]
    run: "once"
    deps:
      - ":init"
      - task: ":utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: ":utils:misc:create-venv"
        vars:
          LABEL: "lint"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          REQUIREMENTS_FILE: "lint-requirements.txt"
      # This command must be last
      - task: ":utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
